<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="46" passed="28" failed="18" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-07-04T18:22:08Z" name="Main Operations" finished-at="2018-07-04T18:22:09Z" duration-ms="142">
    <groups>
      <group name="Smoke">
        <method signature="SubCalcTestDouble.subTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble@6dab9b6d]" name="subTest" class="com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble"/>
        <method signature="SubCalcTestLong.subTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong@53941c2f]" name="subTest" class="com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong"/>
        <method signature="MultCalcTestDouble.multTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble@a87f8ec]" name="multTest" class="com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble"/>
        <method signature="MultCalcTestLong.multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" name="multTest" class="com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2018-07-04T18:22:08Z" name="Sub Tests" finished-at="2018-07-04T18:22:08Z" duration-ms="34">
      <class name="com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble@6dab9b6d]" started-at="2018-07-04T18:22:08Z" name="preCondition" finished-at="2018-07-04T18:22:08Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="subTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble@6dab9b6d]" started-at="2018-07-04T18:22:08Z" name="subTest" data-provider="valuesForSubTest" finished-at="2018-07-04T18:22:08Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method signature="subTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble@6dab9b6d]" started-at="2018-07-04T18:22:08Z" name="subTest" data-provider="valuesForSubTest" finished-at="2018-07-04T18:22:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method signature="subTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble@6dab9b6d]" started-at="2018-07-04T18:22:08Z" name="subTest" data-provider="valuesForSubTest" finished-at="2018-07-04T18:22:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.22222]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.11111]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.11111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.SubCalcTestDouble -->
      <class name="com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong@53941c2f]" started-at="2018-07-04T18:22:08Z" name="preCondition" finished-at="2018-07-04T18:22:08Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="subTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong@53941c2f]" started-at="2018-07-04T18:22:08Z" name="subTest" finished-at="2018-07-04T18:22:08Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.SubCalcTestLong -->
    </test> <!-- Sub Tests -->
    <test started-at="2018-07-04T18:22:09Z" name="Mult Tests" finished-at="2018-07-04T18:22:09Z" duration-ms="5">
      <class name="com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong">
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong@4f9a2c08]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.MultCalcTestLong -->
      <class name="com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble@a87f8ec]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble@a87f8ec]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2321]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mult operation is incorrect: 1.11 * 1.11 = 1.0 expected [1.2321] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mult operation is incorrect: 1.11 * 1.11 = 1.0 expected [1.2321] but found [1.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble.multTest(MultCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble@a87f8ec]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble@a87f8ec]" started-at="2018-07-04T18:22:09Z" name="multTest" data-provider="valuesForMultTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.2321]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mult operation is incorrect: -1.11 * 1.11 = -2.0 expected [-1.2321] but found [-2.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mult operation is incorrect: -1.11 * 1.11 = -2.0 expected [-1.2321] but found [-2.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble.multTest(MultCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.MultCalcTestDouble -->
    </test> <!-- Mult Tests -->
  </suite> <!-- Main Operations -->
  <suite started-at="2018-07-04T18:22:09Z" name="Other Operations" finished-at="2018-07-04T18:22:09Z" duration-ms="107">
    <groups>
    </groups>
    <test started-at="2018-07-04T18:22:09Z" name="Pow Tests" finished-at="2018-07-04T18:22:09Z" duration-ms="4">
      <class name="com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble">
        <test-method signature="powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powNegativeTest" data-provider="valuesForPowTestNegative" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method PowCalcTestDouble.powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method PowCalcTestDouble.powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9] should have thrown an exception of type class java.lang.Exception
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powNegativeTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powNegativeTest" data-provider="valuesForPowTestNegative" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method PowCalcTestDouble.powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method PowCalcTestDouble.powNegativeTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9] should have thrown an exception of type class java.lang.Exception
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powNegativeTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.656854249492381]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pow operation is incorrect: 2.0^2.5 = 4.0 expected [5.656854249492381] but found [4.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pow operation is incorrect: 2.0^2.5 = 4.0 expected [5.656854249492381] but found [4.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble.powTest(PowCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.1764696816352779]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pow operation is incorrect: 2.2^-2.2 = 0.09391435011269719 expected [0.1764696816352779] but found [0.09391435011269719]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pow operation is incorrect: 2.2^-2.2 = 0.09391435011269719 expected [0.1764696816352779] but found [0.09391435011269719]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble.powTest(PowCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15.625]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="powTest" data-provider="valuesForPowTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.8821176880262]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Pow operation is incorrect: 2.5^2.5 = 6.25 expected [9.8821176880262] but found [6.25]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Pow operation is incorrect: 2.5^2.5 = 6.25 expected [9.8821176880262] but found [6.25]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble.powTest(PowCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble@7dda48d9]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.PowCalcTestDouble -->
    </test> <!-- Pow Tests -->
    <test started-at="2018-07-04T18:22:09Z" name="Sqrt Tests" finished-at="2018-07-04T18:22:09Z" duration-ms="5">
      <class name="com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="sqrtTest" data-provider="valuesForSqrtTest" finished-at="2018-07-04T18:22:09Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method signature="sqrtTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="sqrtTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method SqrtCalcTestDouble.sqrtTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method SqrtCalcTestDouble.sqrtTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0] should have thrown an exception of type class java.lang.Exception
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="sqrtTest" data-provider="valuesForSqrtTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="sqrtTest" data-provider="valuesForSqrtTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble@4ce1d6d0]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.SqrtCalcTestDouble -->
    </test> <!-- Sqrt Tests -->
    <test started-at="2018-07-04T18:22:09Z" name="Trigonometry Tests" finished-at="2018-07-04T18:22:09Z" duration-ms="16">
      <class name="com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble">
        <test-method signature="tgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="tgTest" data-provider="valuesForTgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Tg operation is incorrect: Tg 0.0 = NaN expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Tg operation is incorrect: Tg 0.0 = NaN expected [0.0] but found [NaN]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble.tgTest(TgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="tgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="tgTest" data-provider="valuesForTgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5574077246549]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Tg operation is incorrect: Tg 1.0 = 1.0 expected [1.5574077246549] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Tg operation is incorrect: Tg 1.0 = 1.0 expected [1.5574077246549] but found [1.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble.tgTest(TgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method signature="tgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="tgTest" data-provider="valuesForTgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.6483608274590866]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Tg operation is incorrect: Tg 10.0 = 1.0 expected [0.6483608274590866] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Tg operation is incorrect: Tg 10.0 = 1.0 expected [0.6483608274590866] but found [1.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble.tgTest(TgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method signature="tgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="tgTest" data-provider="valuesForTgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.64836082745909]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Tg operation is incorrect: Tg -10.0 = 1.0 expected [-0.64836082745909] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Tg operation is incorrect: Tg -10.0 = 1.0 expected [-0.64836082745909] but found [1.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble.tgTest(TgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble@460ebd80]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.TgCalcTestDouble -->
      <class name="com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble">
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble@6436a7db]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForCosTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cos operation is incorrect: Cos 0.0 = 0.0 expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cos operation is incorrect: Cos 0.0 = 0.0 expected [1.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble.sinTest(CosCalcTestDouble.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble@6436a7db]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble@6436a7db]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForCosTest" finished-at="2018-07-04T18:22:09Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5143952585235492]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cos operation is incorrect: Cos 1.0 = 0.8414709848078965 expected [0.5143952585235492] but found [0.8414709848078965]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cos operation is incorrect: Cos 1.0 = 0.8414709848078965 expected [0.5143952585235492] but found [0.8414709848078965]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble.sinTest(CosCalcTestDouble.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble@6436a7db]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForCosTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5143952585235492]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cos operation is incorrect: Cos -1.0 = -0.8414709848078965 expected [0.5143952585235492] but found [-0.8414709848078965]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cos operation is incorrect: Cos -1.0 = -0.8414709848078965 expected [0.5143952585235492] but found [-0.8414709848078965]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble.sinTest(CosCalcTestDouble.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble@6436a7db]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.CosCalcTestDouble -->
      <class name="com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble">
        <test-method signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a]" started-at="2018-07-04T18:22:09Z" name="ctgTest" data-provider="valuesForCtgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.64209261593433]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Ctg operation is incorrect: Ctg 1.0 = 0.7615941559557649 expected [0.64209261593433] but found [0.7615941559557649]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Ctg operation is incorrect: Ctg 1.0 = 0.7615941559557649 expected [0.64209261593433] but found [0.7615941559557649]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble.ctgTest(CtgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a]" started-at="2018-07-04T18:22:09Z" name="ctgTest" data-provider="valuesForCtgTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.5423510453569]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Ctg operation is incorrect: Ctg -10.0 = -0.9999999958776927 expected [-1.5423510453569] but found [-0.9999999958776927]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Ctg operation is incorrect: Ctg -10.0 = -0.9999999958776927 expected [-1.5423510453569] but found [-0.9999999958776927]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble.ctgTest(CtgCalcTestDouble.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="ctgTestNegative()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a]" started-at="2018-07-04T18:22:09Z" name="ctgTestNegative" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method CtgCalcTestDouble.ctgTestNegative()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method CtgCalcTestDouble.ctgTestNegative()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble@6f3c660a] should have thrown an exception of type class java.lang.Exception
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Runners.CalcTestsRunner.main(CalcTestsRunner.java:31)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTestNegative -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.CtgCalcTestDouble -->
      <class name="com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble">
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble@62ef27a8]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForSinTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8414709848078965]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble@62ef27a8]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble@62ef27a8]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForSinTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble@62ef27a8]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble@62ef27a8]" started-at="2018-07-04T18:22:09Z" name="sinTest" data-provider="valuesForSinTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.8414709848078965]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.SinCalcTestDouble -->
    </test> <!-- Trigonometry Tests -->
    <test started-at="2018-07-04T18:22:09Z" name="Boolean tests" finished-at="2018-07-04T18:22:09Z" duration-ms="3">
      <class name="com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong">
        <test-method signature="isNegativeTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong@79517588]" started-at="2018-07-04T18:22:09Z" name="isNegativeTest" data-provider="valuesForIsNegativeTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong@79517588]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="isNegativeTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong@79517588]" started-at="2018-07-04T18:22:09Z" name="isNegativeTest" data-provider="valuesForIsNegativeTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong@79517588]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="isNegativeTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong@79517588]" started-at="2018-07-04T18:22:09Z" name="isNegativeTest" data-provider="valuesForIsNegativeTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNegativeTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.IsNegativeCalcTestLong -->
      <class name="com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong">
        <test-method signature="isPositiveTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong@4eb386df]" started-at="2018-07-04T18:22:09Z" name="isPositiveTest" data-provider="valuesForIsPositiveTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method signature="isPositiveTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong@4eb386df]" started-at="2018-07-04T18:22:09Z" name="isPositiveTest" data-provider="valuesForIsPositiveTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method is-config="true" signature="preCondition()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong@4eb386df]" started-at="2018-07-04T18:22:09Z" name="preCondition" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="isPositiveTest(long, boolean)[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong@4eb386df]" started-at="2018-07-04T18:22:09Z" name="isPositiveTest" data-provider="valuesForIsPositiveTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPositiveTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong@4eb386df]" started-at="2018-07-04T18:22:09Z" name="afterTest" finished-at="2018-07-04T18:22:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.epam.cdp.calc_unit_tests.tests.IsPositiveCalcTestLong -->
    </test> <!-- Boolean tests -->
  </suite> <!-- Other Operations -->
  <suite started-at="2018-07-04T18:22:09Z" name="All Tests" finished-at="2018-07-04T18:22:09Z" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- All Tests -->
</testng-results>
